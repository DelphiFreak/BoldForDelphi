object dmMain: TdmMain
  OldCreateOrder = False
  Left = 182
  Top = 169
  Height = 480
  Width = 747
  object BoldSystemHandle1: TBoldSystemHandle
    IsDefault = True
    SystemTypeInfoHandle = BoldSystemTypeInfoHandle1
    Active = False
    PersistenceHandle = BoldPersistenceHandleDB1
    Left = 336
    Top = 88
  end
  object BoldModel1: TBoldModel
    TypeNameHandle = BoldTypeNameHandle1
    UMLModelMode = ummNone
    Boldify.EnforceDefaultUMLCase = False
    Boldify.DefaultNavigableMultiplicity = '0..1'
    Boldify.DefaultNonNavigableMultiplicity = '0..*'
    Left = 456
    Top = 24
    Model = (
      'VERSION 19'
      '(Model'
      #9'"BudgetClasses"'
      #9'"BudgetClassesRoot"'
      #9'""'
      #9'""'
      
        #9'"_Boldify.RootClass=BusinessClassesRoot,_BoldInternal.flattened' +
        '=True,_Boldify.boldified=True,_BoldInternal.ModelErrors=,Bold.De' +
        'lphiName=<Name>,Bold.UnitName=BudgetClasses,Bold.RootClass=Budge' +
        'tClassesRoot"'
      #9'(Classes'
      #9#9'(Class'
      #9#9#9'"BudgetClassesRoot"'
      #9#9#9'"<NONE>"'
      #9#9#9'TRUE'
      #9#9#9'FALSE'
      #9#9#9'""'
      #9#9#9'""'
      
        #9#9#9'"persistence=Persistent,Bold.TableName=<Prefix>_OBJECT,Bold.V' +
        'ersioned=<Default>"'
      #9#9#9'(Attributes'
      #9#9#9')'
      #9#9#9'(Methods'
      #9#9#9')'
      #9#9')'
      #9#9'(Class'
      #9#9#9'"Budget"'
      #9#9#9'"BudgetClassesRoot"'
      #9#9#9'TRUE'
      #9#9#9'FALSE'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent"'
      #9#9#9'(Attributes'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"aName"'
      #9#9#9#9#9'"String"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9')'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"aNumber"'
      #9#9#9#9#9'"Integer"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9')'
      #9#9#9')'
      #9#9#9'(Methods'
      #9#9#9#9'(Method'
      #9#9#9#9#9'"CompleteCreate"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"Bold.OperationKind=Override"'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9#9'(Class'
      #9#9#9'"Col"'
      #9#9#9'"BudgetClassesRoot"'
      #9#9#9'TRUE'
      #9#9#9'FALSE'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent"'
      #9#9#9'(Attributes'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"aNumber"'
      #9#9#9#9#9'"Integer"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9')'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"aName"'
      #9#9#9#9#9'"String"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9')'
      #9#9#9')'
      #9#9#9'(Methods'
      #9#9#9#9'(Method'
      #9#9#9#9#9'"CompleteCreate"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"Bold.OperationKind=Override"'
      #9#9#9#9')'
      #9#9#9#9'(Method'
      #9#9#9#9#9'"CompareToAs"'
      
        #9#9#9#9#9'"CompareType: TBoldCompareType; BoldDirectElement: TBoldEle' +
        'ment"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Integer"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"Bold.OperationKind=Override"'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9#9'(Class'
      #9#9#9'"ACell"'
      #9#9#9'"BudgetClassesRoot"'
      #9#9#9'TRUE'
      #9#9#9'FALSE'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent"'
      #9#9#9'(Attributes'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"aName"'
      #9#9#9#9#9'"String"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9')'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"aValue"'
      #9#9#9#9#9'"Double"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9')'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"rownum"'
      #9#9#9#9#9'"Integer"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      
        #9#9#9#9#9'"Derived=True,persistence=Transient,Bold.DerivationOCL=row.' +
        'aNumber"'
      #9#9#9#9')'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"colnum"'
      #9#9#9#9#9'"Integer"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      
        #9#9#9#9#9'"Derived=True,persistence=Transient,Bold.DerivationOCL=col.' +
        'aNumber"'
      #9#9#9#9')'
      #9#9#9')'
      #9#9#9'(Methods'
      #9#9#9#9'(Method'
      #9#9#9#9#9'"CompleteCreate"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"Bold.OperationKind=Override"'
      #9#9#9#9')'
      #9#9#9#9'(Method'
      #9#9#9#9#9'"CompareToAs"'
      
        #9#9#9#9#9'"CompareType: TBoldCompareType; BoldDirectElement: TBoldEle' +
        'ment"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Integer"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"Bold.OperationKind=Override"'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9#9'(Class'
      #9#9#9'"Row"'
      #9#9#9'"BudgetClassesRoot"'
      #9#9#9'TRUE'
      #9#9#9'FALSE'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent"'
      #9#9#9'(Attributes'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"aNumber"'
      #9#9#9#9#9'"integer"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9')'
      #9#9#9#9'(Attribute'
      #9#9#9#9#9'"aName"'
      #9#9#9#9#9'"String"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9')'
      #9#9#9')'
      #9#9#9'(Methods'
      #9#9#9#9'(Method'
      #9#9#9#9#9'"CompleteCreate"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'""'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"Bold.OperationKind=Override"'
      #9#9#9#9')'
      #9#9#9#9'(Method'
      #9#9#9#9#9'"CompareToAs"'
      
        #9#9#9#9#9'"CompareType: TBoldCompareType; BoldDirectElement: TBoldEle' +
        'ment"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Integer"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"Bold.OperationKind=Override"'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9#9'(Class'
      #9#9#9'"RowBudget"'
      #9#9#9'"BudgetClassesRoot"'
      #9#9#9'TRUE'
      #9#9#9'FALSE'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent,Bold.Versioned=<Default>"'
      #9#9#9'(Attributes'
      #9#9#9')'
      #9#9#9'(Methods'
      #9#9#9')'
      #9#9')'
      #9#9'(Class'
      #9#9#9'"ColBudget"'
      #9#9#9'"BudgetClassesRoot"'
      #9#9#9'TRUE'
      #9#9#9'FALSE'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent,Bold.Versioned=<Default>"'
      #9#9#9'(Attributes'
      #9#9#9')'
      #9#9#9'(Methods'
      #9#9#9')'
      #9#9')'
      #9')'
      #9'(Associations'
      #9#9'(Association'
      #9#9#9'"Rowx__ACell"'
      #9#9#9'"<NONE>"'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent,Bold.DelphiName=<Name>"'
      #9#9#9'FALSE'
      #9#9#9'(Roles'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"Row"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"ACell"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"1"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'""'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"x__ACell"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Row"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"*"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'"Bold.Embed=False"'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9#9'(Association'
      #9#9#9'"Colx__ACell"'
      #9#9#9'"<NONE>"'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent,Bold.DelphiName=<Name>"'
      #9#9#9'FALSE'
      #9#9#9'(Roles'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"Col"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"ACell"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"1"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'""'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"x__ACell"'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Col"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"*"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'"Bold.Embed=False"'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9#9'(Association'
      #9#9#9'"ACellBudget"'
      #9#9#9'"<NONE>"'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent,Bold.DelphiName=<Name>"'
      #9#9#9'FALSE'
      #9#9#9'(Roles'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"ACell"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Budget"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"0..1"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'2'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'"Bold.Embed=False"'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9#9'(Qualifier'
      #9#9#9#9#9#9#9'"colnum"'
      #9#9#9#9#9#9#9'"Integer"'
      #9#9#9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9#9#9')'
      #9#9#9#9#9#9'(Qualifier'
      #9#9#9#9#9#9#9'"rownum"'
      #9#9#9#9#9#9#9'"Integer"'
      #9#9#9#9#9#9#9'"persistence=Persistent"'
      #9#9#9#9#9#9')'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"Budget"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"ACell"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"1"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'""'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9#9'(Association'
      #9#9#9'"RowBudget"'
      #9#9#9'"RowBudget"'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent,Bold.DelphiName=<Name>"'
      #9#9#9'FALSE'
      #9#9#9'(Roles'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"Row"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Budget"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"*"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'"Bold.Embed=False"'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"Budget"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Row"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"*"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'"Bold.Embed=False"'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9#9'(Association'
      #9#9#9'"ColBudget"'
      #9#9#9'"ColBudget"'
      #9#9#9'""'
      #9#9#9'""'
      #9#9#9'"persistence=Persistent,Bold.DelphiName=<Name>"'
      #9#9#9'FALSE'
      #9#9#9'(Roles'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"Col"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Budget"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"*"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'"Bold.Embed=False"'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9#9'(Role'
      #9#9#9#9#9'"Budget"'
      #9#9#9#9#9'TRUE'
      #9#9#9#9#9'FALSE'
      #9#9#9#9#9'"Col"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'"*"'
      #9#9#9#9#9'""'
      #9#9#9#9#9'0'
      #9#9#9#9#9'2'
      #9#9#9#9#9'0'
      #9#9#9#9#9'"Bold.Embed=False"'
      #9#9#9#9#9'(Qualifiers'
      #9#9#9#9#9')'
      #9#9#9#9')'
      #9#9#9')'
      #9#9')'
      #9')'
      ')')
  end
  object BoldSystemTypeInfoHandle1: TBoldSystemTypeInfoHandle
    BoldModel = BoldModel1
    Left = 264
    Top = 312
  end
  object BoldTypeNameHandle1: TBoldTypeNameHandle
    Dictionary = <
      item
        ModelName = '<Default>'
        ExpressionName = 'String'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'WideString'
        IDLType = 'BSTR'
      end
      item
        ModelName = 'String'
        ExpressionName = 'String'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'WideString'
        IDLType = 'BSTR'
      end
      item
        ModelName = '<Numeric>'
        ExpressionName = 'Numeric'
        DelphiName = 'TBA<Name>'
        UnitName = 'BoldAttributes'
      end
      item
        ModelName = 'Integer'
        ExpressionName = 'Integer'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = '<Name>'
        IDLType = 'LONG'
      end
      item
        ModelName = 'Word'
        ExpressionName = 'Word'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'Integer'
        IDLType = 'LONG'
      end
      item
        ModelName = 'SmallInt'
        ExpressionName = 'SmallInt'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'Integer'
        IDLType = 'LONG'
      end
      item
        ModelName = 'Byte'
        ExpressionName = 'Byte'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'Integer'
        IDLType = 'LONG'
      end
      item
        ModelName = 'ShortInt'
        ExpressionName = 'ShortInt'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'Integer'
        IDLType = 'LONG'
      end
      item
        ModelName = 'Float'
        ExpressionName = 'Float'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = 'double'
        UnitName = 'BoldAttributes'
        ComType = 'Double'
        IDLType = 'DOUBLE'
      end
      item
        ModelName = 'Currency'
        ExpressionName = 'Currency'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = '<Name>'
        IDLType = 'CURRENCY'
      end
      item
        ModelName = '<Moment>'
        ExpressionName = 'Moment'
        DelphiName = 'TBA<Name>'
        UnitName = 'BoldAttributes'
      end
      item
        ModelName = 'DateTime'
        ExpressionName = 'DateTime'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = 'T<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'T<Name>'
        IDLType = 'DATE'
      end
      item
        ModelName = 'TimeStamp'
        ExpressionName = 'DateTime'
        DelphiName = 'TBADateTime'
        ContentsName = 'DateTime'
        MapperName = 'TBoldPMDateTime'
        Accessor = 'AsDateTime'
        NativeType = 'TDateTime'
        UnitName = 'BoldAttributes'
        ComType = 'TDateTime'
        IDLType = 'DATE'
      end
      item
        ModelName = 'Date'
        ExpressionName = 'Date'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = 'T<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'TDateTime'
        IDLType = 'DATE'
      end
      item
        ModelName = 'Time'
        ExpressionName = 'Time'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'As<Name>'
        NativeType = 'T<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'TDateTime'
        IDLType = 'DATE'
      end
      item
        ModelName = '<ValueSet>'
        ExpressionName = 'ValueSet'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPMInteger'
        Accessor = 'AsInteger'
        NativeType = 'integer'
        UnitName = 'BoldAttributes'
        ComType = 'Integer'
        IDLType = 'LONG'
      end
      item
        ModelName = 'Boolean'
        ExpressionName = 'Boolean'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPMInteger'
        Accessor = 'As<Name>'
        NativeType = '<Name>'
        UnitName = 'BoldAttributes'
        ComType = 'WordBool'
        IDLType = 'VARIANT_BOOL'
      end
      item
        ModelName = 'Constraint'
        ExpressionName = 'Constraint'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPMInteger'
        Accessor = 'AsBoolean'
        NativeType = 'Boolean'
        UnitName = 'BoldAttributes'
        ComType = 'WordBool'
        IDLType = 'VARIANT_BOOL'
      end
      item
        ModelName = 'Blob'
        ExpressionName = 'Blob'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'AsString'
        NativeType = 'String'
        UnitName = 'BoldAttributes'
        ComType = 'WideString'
        IDLType = 'BSTR'
      end
      item
        ModelName = 'TypedBlob'
        ExpressionName = 'TypedBlob'
        DelphiName = 'TBA<Name>'
        ContentsName = '<Name>'
        MapperName = 'TBoldPM<Name>'
        Accessor = 'AsString'
        NativeType = 'String'
        UnitName = 'BoldAttributes'
        ComType = 'WideString'
        IDLType = 'BSTR'
      end
      item
        ModelName = 'BlobImageBMP'
        ExpressionName = 'BlobImageBMP'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Blob'
        MapperName = 'TBoldPMBlob'
        Accessor = 'AsString'
        NativeType = 'String'
        UnitName = 'BoldAttributes'
        ComType = 'WideString'
        IDLType = 'BSTR'
      end
      item
        ModelName = 'BlobImageJPEG'
        ExpressionName = 'BlobImageJPEG'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Blob'
        MapperName = 'TBoldPMBlob'
        Accessor = 'AsString'
        NativeType = 'String'
        UnitName = 'BoldAttributes'
        ComType = 'WideString'
        IDLType = 'BSTR'
      end
      item
        ModelName = 'MLString'
        ExpressionName = 'MLString'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Blob'
        MapperName = 'TBoldPMBlob'
        Accessor = 'AsString'
        NativeType = 'String'
        UnitName = 'BoldMLAttributes'
        ComType = 'WideString'
        IDLType = 'BSTR'
      end
      item
        ModelName = 'MLValueSet'
        ExpressionName = 'MLValueSet'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPMInteger'
        Accessor = 'AsInteger'
        NativeType = 'integer'
        UnitName = 'BoldMLAttributes'
        ComType = 'Integer'
        IDLType = 'LONG'
      end
      item
        ModelName = 'Language'
        ExpressionName = 'Language'
        DelphiName = 'TBA<Name>'
        ContentsName = 'Integer'
        MapperName = 'TBoldPMInteger'
        Accessor = 'AsInteger'
        NativeType = 'integer'
        UnitName = 'BoldMLAttributes'
        ComType = 'Integer'
        IDLType = 'LONG'
      end>
    Left = 288
    Top = 152
  end
  object blhAllBudget: TBoldListHandle
    RootHandle = BoldSystemHandle1
    Expression = 'Budget.allInstances'
    Left = 56
    Top = 56
  end
  object blhAllColumn: TBoldListHandle
    RootHandle = BoldSystemHandle1
    BoldComparer = bcColumn
    Expression = 'Col.allInstances'
    Left = 40
    Top = 240
  end
  object bcColumn: TBoldComparer
    OnCompare = bcColumnCompare
    Left = 120
    Top = 72
  end
  object blhAllRow: TBoldListHandle
    RootHandle = BoldSystemHandle1
    BoldComparer = bcRow
    Expression = 'Row.allInstances'
    Left = 128
    Top = 184
  end
  object bcRow: TBoldComparer
    OnCompare = bcRowCompare
    Left = 108
    Top = 136
  end
  object blhBudgetCells: TBoldListHandle
    RootHandle = blhAllBudget
    BoldComparer = bcCells
    Expression = 'aCell->orderby(col)'
    Left = 48
    Top = 112
  end
  object bcCells: TBoldComparer
    OnCompare = bcCellsCompare
    Left = 120
    Top = 264
  end
  object blhAllCell: TBoldListHandle
    RootHandle = BoldSystemHandle1
    Expression = 'ACell.allInstances'
    Left = 44
    Top = 192
  end
  object BoldPersistenceHandleDB1: TBoldPersistenceHandleDB
    BoldModel = BoldModel1
    ClockLogGranularity = '0:0:0.0'
    DatabaseAdapter = BoldDatabaseAdapterIB1
    Left = 392
    Top = 168
  end
  object BoldDatabaseAdapterIB1: TBoldDatabaseAdapterIB
    SQLDatabaseConfig.ColumnTypeForDate = 'TIMESTAMP'
    SQLDatabaseConfig.ColumnTypeForTime = 'TIMESTAMP'
    SQLDatabaseConfig.ColumnTypeForDateTime = 'TIMESTAMP'
    SQLDatabaseConfig.ColumnTypeForBlob = 'BLOB'
    SQLDatabaseConfig.ColumnTypeForFloat = 'DOUBLE PRECISION'
    SQLDatabaseConfig.ColumnTypeForCurrency = 'DOUBLE PRECISION'
    SQLDatabaseConfig.ColumnTypeForString = 'VARCHAR(%d)'
    SQLDatabaseConfig.ColumnTypeForInteger = 'INTEGER'
    SQLDatabaseConfig.ColumnTypeForSmallInt = 'SMALLINT'
    SQLDatabaseConfig.DropColumnTemplate = 'ALTER TABLE <TableName> DROP <ColumnName>'
    SQLDatabaseConfig.DropTableTemplate = 'DROP TABLE <TableName>'
    SQLDatabaseConfig.DropIndexTemplate = 'DROP INDEX <IndexName>'
    SQLDatabaseConfig.MaxDbIdentifierLength = 31
    SQLDatabaseConfig.MaxIndexNameLength = 31
    SQLDatabaseConfig.SQLforNotNull = 'NOT NULL'
    SQLDatabaseConfig.QuoteNonStringDefaultValues = False
    SQLDatabaseConfig.SupportsConstraintsInCreateTable = True
    SQLDatabaseConfig.SupportsStringDefaultValues = True
    SQLDatabaseConfig.DBGenerationMode = dbgQuery
    SQLDatabaseConfig.ReservedWords.Strings = (
      'ACTIVE, ADD, ALL, AFTER, ALTER'
      'AND, ANY, AS, ASC, ASCENDING,'
      'AT, AUTO, AUTOINC, AVG, BASE_NAME'
      'BEFORE, BEGIN, BETWEEN, BLOB, BOOLEAN,'
      'BOTH, BY, BYTES, CACHE, CAST, CHAR'
      'CHARACTER, CHECK, CHECK_POINT_LENGTH, COLLATE,'
      'COLUMN, COMMIT, COMMITTED, COMPUTED'
      'CONDITIONAL, CONSTRAINT, CONTAINING, COUNT, CREATE, CSTRING,'
      'CURRENT, CURSOR, DATABASE, DATE, DAY'
      'DEBUG, DEC, DECIMAL, DECLARE, DEFAULT,'
      'DELETE, DESC, DESCENDING, DISTINCT, DO'
      'DOMAIN, DOUBLE, DROP, ELSE, END,'
      'ENTRY_POINT, ESCAPE, EXCEPTION, EXECUTE'
      'EXISTS, EXIT, EXTERNAL, EXTRACT, FILE, FILTER,'
      'FLOAT, FOR, FOREIGN, FROM, FULL, FUNCTION'
      'GDSCODE, GENERATOR, GEN_ID, GRANT,'
      'GROUP, GROUP_COMMIT_WAIT_TIME, HAVING'
      'HOUR, IF, IN, INT, INACTIVE, INDEX, INNER,'
      'INPUT_TYPE, INSERT, INTEGER, INTO'
      'IS, ISOLATION, JOIN, KEY, LONG, LENGTH,'
      'LOGFILE, LOWER, LEADING, LEFT, LEVEL'
      'LIKE, LOG_BUFFER_SIZE, MANUAL, MAX, MAXIMUM_SEGMENT,'
      'MERGE, MESSAGE, MIN, MINUTE, MODULE_NAME'
      'MONEY, MONTH, NAMES, NATIONAL, NATURAL,'
      'NCHAR, NO, NOT, NULL, NUM_LOG_BUFFERS'
      'NUMERIC, OF, ON, ONLY, OPTION,'
      'OR, ORDER, OUTER, OUTPUT_TYPE, OVERFLOW'
      'PAGE_SIZE, PAGE, PAGES, PARAMETER, PASSWORD,'
      'PLAN, POSITION, POST_EVENT, PRECISION'
      
        'PROCEDURE, PROTECTED, PRIMARY, PRIVILEGES, RAW_PARTITIONS, RDB$D' +
        'B_KEY,'
      'READ, REAL, RECORD_VERSION, REFERENCES'
      'RESERV, RESERVING, RETAIN, RETURNING_VALUES, RETURNS, REVOKE,'
      'RIGHT, ROLE, ROLLBACK, SECOND, SEGMENT'
      'SELECT, SET, SHARED, SHADOW, SCHEMA, SINGULAR,'
      'SIZE, SMALLINT, SNAPSHOT, SOME, SORT'
      'SQLCODE, STABILITY, STARTING, STARTS, STATISTICS,'
      'SUB_TYPE, SUBSTRING, SUM, SUSPEND, TABLE'
      'THEN, TIME, TIMESTAMP, TIMEZONE_HOUR, TIMEZONE_MINUTE,'
      'TO, TRAILING, TRANSACTION, TRIGGER, TRIM'
      'UNCOMMITTED, UNION, UNIQUE, UPDATE, UPPER,'
      'USER, VALUE, VALUES, VARCHAR, VARIABLE'
      'VARYING, VIEW, WAIT, WHEN, WHERE,'
      'WHILE, WITH, WORK, WRITE, YEAR')
    SQLDatabaseConfig.StoreEmptyStringsAsNULL = False
    SQLDatabaseConfig.SystemTablePrefix = 'BOLD'
    DataBase = IBDatabase1
    DatabaseEngine = dbeInterbaseSQLDialect3
    Left = 392
    Top = 224
  end
  object IBDatabase1: TIBDatabase
    DatabaseName = 'XMLDISPATCHER.GDB'
    Params.Strings = (
      'user_name=sysdba'
      'password=masterkey')
    LoginPrompt = False
    IdleTimer = 0
    SQLDialect = 3
    TraceFlags = []
    BeforeConnect = IBDatabase1BeforeConnect
    Left = 392
    Top = 272
  end
end
