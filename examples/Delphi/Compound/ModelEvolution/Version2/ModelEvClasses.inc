   {**********************************************************}
   {                                                          }
   {       Bold for Delphi Stub File                          }
   {                                                          }
   {       Autogenerated file for method implementations      }
   {                                                          }
   {**********************************************************}


{$INCLUDE ModelEvClasses_Interface.inc}

procedure TDiscount.ReceiveEventFromOwned(Originator: TObject; OriginalEvent: TBoldEvent);
var
  i: integer;
begin
  inherited;
  // copy the new value to all orders we are related to...
  if (Originator = M_percent) and (OriginalEvent = beCompleteModify) then
  begin
    for i := 0 to order.count-1 do
      Order[i].discount := percent;
  end;
end;

procedure TPerson.PrepareUpdate;
begin
  inherited;
  fullName := firstname + ' ' + lastName;
end;

procedure TProduct.PrepareUpdate;
begin
  inherited;
  // the exchange rate between Swedish crowns (our old currency)
  // and Euro (the new currency)
  cost := CostEuro*8;
end;
 
procedure TOrder.Upgrade;
begin
  // the discount has moved from an attribute to an associated class.
  if not assigned(theDiscount) then
    TheDiscount := TDiscount.Create(BoldSystem);
  TheDiscount.Percent := Discount;
end;

procedure TPerson.Upgrade;
begin
  // move the name from fullname (used in version 1) to first and last name
  firstname := trim(copy(fullName, 1, pos(' ', fullName)-1));
  LastName := trim(copy(FullName, pos(' ', FullName)+1, maxint));
end;

procedure TProduct.Upgrade;
begin
  // Move the cost from the old currency (in swedish crowns) to the new (Euro)
  CostEuro := Cost/8;
end;

 