(*****************************************)
(*      This file is autogenerated       *)
(*   Any manual changes will be LOST!    *)
(*****************************************)
(* Generated 2002-04-05 15:55:55         *)
(*****************************************)
(* This file should be stored in the     *)
(* same directory as the form/datamodule *)
(* with the corresponding model          *)
(*****************************************)
(* Copyright notice:                     *)
(*                                       *)
(*****************************************)

{$IFNDEF OclVariableClasses_Interface.inc}
{$DEFINE OclVariableClasses_Interface.inc}

{$IFNDEF OclVariableClasses_unitheader}
unit OclVariableClasses;
{$ENDIF}

interface

uses
  // interface uses
  // interface dependencies
  // attribute classes
  BoldAttributes,
  // other
  Classes,
  Controls, // for TDate
  SysUtils,
  BoldDefs,
  BoldSubscription,
  BoldDeriver,
  BoldElements,
  BoldDomainElement,
  BoldSystemRT,
  BoldSystem;

type
  { forward declarations of all classes }

  TBusinessClassesRoot = class;
  TBusinessClassesRootList = class;
  TGlobalSettings = class;
  TGlobalSettingsList = class;
  TProduct = class;
  TProductList = class;

  TBusinessClassesRoot = class(TBoldObject)
  private
  protected
  public
  end;

  TGlobalSettings = class(TBusinessClassesRoot)
  private
    function _Get_M_vat: TBAFloat;
    function _Getvat: double;
    procedure _Setvat(NewValue: double);
  protected
  public
    property M_vat: TBAFloat read _Get_M_vat;
    property vat: double read _Getvat write _Setvat;
  end;

  TProduct = class(TBusinessClassesRoot)
  private
    function _Get_M_prodName: TBAString;
    function _GetprodName: String;
    procedure _SetprodName(NewValue: String);
    function _Get_M_net_Price: TBACurrency;
    function _Getnet_Price: Currency;
    procedure _Setnet_Price(NewValue: Currency);
  protected
  public
    property M_prodName: TBAString read _Get_M_prodName;
    property M_net_Price: TBACurrency read _Get_M_net_Price;
    property prodName: String read _GetprodName write _SetprodName;
    property net_Price: Currency read _Getnet_Price write _Setnet_Price;
  end;

  TBusinessClassesRootList = class(TBoldObjectList)
  protected
    function GetBoldObject(index: Integer): TBusinessClassesRoot;
    procedure SetBoldObject(index: Integer; NewObject: TBusinessClassesRoot);
  public
    function Includes(anObject: TBusinessClassesRoot): Boolean;
    function IndexOf(anObject: TBusinessClassesRoot): Integer;
    procedure Add(NewObject: TBusinessClassesRoot);
    function AddNew: TBusinessClassesRoot;
    procedure Insert(index: Integer; NewObject: TBusinessClassesRoot);
    property BoldObjects[index: Integer]: TBusinessClassesRoot read GetBoldObject write SetBoldObject; default;
  end;

  TGlobalSettingsList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TGlobalSettings;
    procedure SetBoldObject(index: Integer; NewObject: TGlobalSettings);
  public
    function Includes(anObject: TGlobalSettings): Boolean;
    function IndexOf(anObject: TGlobalSettings): Integer;
    procedure Add(NewObject: TGlobalSettings);
    function AddNew: TGlobalSettings;
    procedure Insert(index: Integer; NewObject: TGlobalSettings);
    property BoldObjects[index: Integer]: TGlobalSettings read GetBoldObject write SetBoldObject; default;
  end;

  TProductList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TProduct;
    procedure SetBoldObject(index: Integer; NewObject: TProduct);
  public
    function Includes(anObject: TProduct): Boolean;
    function IndexOf(anObject: TProduct): Integer;
    procedure Add(NewObject: TProduct);
    function AddNew: TProduct;
    procedure Insert(index: Integer; NewObject: TProduct);
    property BoldObjects[index: Integer]: TProduct read GetBoldObject write SetBoldObject; default;
  end;

function GeneratedCodeCRC: String;

implementation

{$ENDIF}

 