(*****************************************)
(*      This file is autogenerated       *)
(*   Any manual changes will be LOST!    *)
(*****************************************)
(* Generated 2002-04-05 15:31:14         *)
(*****************************************)
(* This file should be stored in the     *)
(* same directory as the form/datamodule *)
(* with the corresponding model          *)
(*****************************************)
(* Copyright notice:                     *)
(*                                       *)
(*****************************************)

{$IFNDEF CustAttrExampleClasses_Interface.inc}
{$DEFINE CustAttrExampleClasses_Interface.inc}

{$IFNDEF CustAttrExampleClasses_unitheader}
unit CustAttrExampleClasses;
{$ENDIF}

interface

uses
  // interface uses
  BoldPMString25,
  BACoordinatePMapper,
  // interface dependencies
  // attribute classes
  BABudgetStatus,
  BACoordinate,
  BAName,
  BAShortString,
  BASwedishSocSec,
  // other
  Classes,
  Controls, // for TDate
  SysUtils,
  BoldDefs,
  BoldSubscription,
  BoldDeriver,
  BoldElements,
  BoldDomainElement,
  BoldSystemRT,
  BoldSystem;

type
  { forward declarations of all classes }

  TBusinessClassesRoot = class;
  TBusinessClassesRootList = class;
  TTestClass = class;
  TTestClassList = class;

  TBusinessClassesRoot = class(TBoldObject)
  private
  protected
  public
  end;

  TTestClass = class(TBusinessClassesRoot)
  private
    function _Get_M_shortString: TBAShortString;
    function _GetshortString: String;
    procedure _SetshortString(NewValue: String);
    function _Get_M_coordinate: TBACoordinate;
    function _Get_M_swedishSocSec: TBASwedishSocSec;
    function _GetswedishSocSec: String;
    procedure _SetswedishSocSec(NewValue: String);
    function _Get_M_budgetStatus: TBABudgetStatus;
    function _GetbudgetStatus: TBudgetStatusEnum;
    procedure _SetbudgetStatus(NewValue: TBudgetStatusEnum);
    function _Get_M_name: TBAName;
    function _Getname: String;
    procedure _Setname(NewValue: String);
  protected
  public
    procedure CompleteCreate; override;
    property M_shortString: TBAShortString read _Get_M_shortString;
    property M_coordinate: TBACoordinate read _Get_M_coordinate;
    property M_swedishSocSec: TBASwedishSocSec read _Get_M_swedishSocSec;
    property M_budgetStatus: TBABudgetStatus read _Get_M_budgetStatus;
    property M_name: TBAName read _Get_M_name;
    property shortString: String read _GetshortString write _SetshortString;
    property swedishSocSec: String read _GetswedishSocSec write _SetswedishSocSec;
    property budgetStatus: TBudgetStatusEnum read _GetbudgetStatus write _SetbudgetStatus;
    property name: String read _Getname write _Setname;
  end;

  TBusinessClassesRootList = class(TBoldObjectList)
  protected
    function GetBoldObject(index: Integer): TBusinessClassesRoot;
    procedure SetBoldObject(index: Integer; NewObject: TBusinessClassesRoot);
  public
    function Includes(anObject: TBusinessClassesRoot): Boolean;
    function IndexOf(anObject: TBusinessClassesRoot): Integer;
    procedure Add(NewObject: TBusinessClassesRoot);
    function AddNew: TBusinessClassesRoot;
    procedure Insert(index: Integer; NewObject: TBusinessClassesRoot);
    property BoldObjects[index: Integer]: TBusinessClassesRoot read GetBoldObject write SetBoldObject; default;
  end;

  TTestClassList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TTestClass;
    procedure SetBoldObject(index: Integer; NewObject: TTestClass);
  public
    function Includes(anObject: TTestClass): Boolean;
    function IndexOf(anObject: TTestClass): Integer;
    procedure Add(NewObject: TTestClass);
    function AddNew: TTestClass;
    procedure Insert(index: Integer; NewObject: TTestClass);
    property BoldObjects[index: Integer]: TTestClass read GetBoldObject write SetBoldObject; default;
  end;

function GeneratedCodeCRC: String;

implementation

{$ENDIF}

 