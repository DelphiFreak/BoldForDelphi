/*****************************************/
/*      This file is autogenerated       */
/*   Any manual changes will be LOST!    */
/*****************************************/
/* Generated 2001-12-17 17:29:25         */
/*****************************************/
/* This file should be stored in the     */
/* same directory as the form/datamodule */
/* with the corresponding model          */
/*****************************************/
/* Copyright notice:                     */
/*                                       */
/*****************************************/

#if !defined (AssociationClassExampleClasses_HPP)
#define AssociationClassExampleClasses_HPP

// interface uses

// interface dependancies

// attribute dependancies
#include "BoldAttributes.hpp"

#include <Classes.hpp>
#include <Controls.hpp>
#include <SysUtils.hpp>
#include "BoldDefs.hpp"
#include "BoldSubscription.hpp"
#include "BoldDeriver.hpp"
#include "BoldElements.hpp"
#include "BoldDomainElement.hpp"
#include "BoldSystemRT.hpp"
#include "BoldSystem.hpp"

void unregisterCode();

// forward declarations of all classes }

class TBusinessClassesRoot;
class TBusinessClassesRootList;
class TCompany;
class TCompanyList;
class TEmployee;
class TEmployeeList;
class TJob;
class TJobList;

class DELPHICLASS TBusinessClassesRoot;
class TBusinessClassesRoot : public Boldsystem::TBoldObject
{
typedef Boldsystem::TBoldObject inherited;
private:
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TBusinessClassesRoot(Boldsystem::TBoldSystem* aBoldSystem) : Boldsystem::TBoldObject(aBoldSystem, true) { }
  #pragma option pop

};

class DELPHICLASS TCompany;
class TCompany : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_name();
  String __fastcall _Getname();
  void __fastcall _Setname(String NewValue);
  TEmployeeList* __fastcall _GetEmployee();
  TJobList* __fastcall _GetJob();
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TCompany(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  void __fastcall CompleteCreate(void);
  __property TBAString* M_name = {read=_Get_M_name};
  __property TEmployeeList* M_Employee = {read=_GetEmployee};
  __property TJobList* M_Job = {read=_GetJob};
  __property String name = {read=_Getname, write=_Setname};
  __property TEmployeeList* Employee = {read=_GetEmployee};
  __property TJobList* Job = {read=_GetJob};
};

class DELPHICLASS TEmployee;
class TEmployee : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_name();
  String __fastcall _Getname();
  void __fastcall _Setname(String NewValue);
  TCompanyList* __fastcall _GetEmployer();
  TJobList* __fastcall _GetJob();
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TEmployee(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  void __fastcall CompleteCreate(void);
  __property TBAString* M_name = {read=_Get_M_name};
  __property TCompanyList* M_Employer = {read=_GetEmployer};
  __property TJobList* M_Job = {read=_GetJob};
  __property String name = {read=_Getname, write=_Setname};
  __property TCompanyList* Employer = {read=_GetEmployer};
  __property TJobList* Job = {read=_GetJob};
};

class DELPHICLASS TJob;
class TJob : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_title();
  String __fastcall _Gettitle();
  void __fastcall _Settitle(String NewValue);
  TBACurrency* __fastcall _Get_M_salary();
  Currency __fastcall _Getsalary();
  void __fastcall _Setsalary(Currency NewValue);
  TEmployee* __fastcall _GetEmployee();
  TBoldObjectReference* __fastcall _Get_M_Employee();
  TCompany* __fastcall _GetEmployer();
  TBoldObjectReference* __fastcall _Get_M_Employer();
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TJob(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  void __fastcall CompleteCreate(void);
  __property TBAString* M_title = {read=_Get_M_title};
  __property TBACurrency* M_salary = {read=_Get_M_salary};
  __property TBoldObjectReference* M_Employee = {read=_Get_M_Employee};
  __property TBoldObjectReference* M_Employer = {read=_Get_M_Employer};
  __property String title = {read=_Gettitle, write=_Settitle};
  __property Currency salary = {read=_Getsalary, write=_Setsalary};
  __property TEmployee* Employee = {read=_GetEmployee};
  __property TCompany* Employer = {read=_GetEmployer};
};

class DELPHICLASS TBusinessClassesRootList;
class TBusinessClassesRootList : public TBoldObjectList
{
protected:
  TBusinessClassesRoot* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TBusinessClassesRoot *NewObject);
public:
  int __fastcall Includes(TBusinessClassesRoot *anObject);
  int __fastcall IndexOf(TBusinessClassesRoot *anObject);
  void __fastcall Add(TBusinessClassesRoot *NewObject);
  TBusinessClassesRoot* __fastcall AddNew();
  void __fastcall Insert(int index, TBusinessClassesRoot *NewObject);
  __property TBusinessClassesRoot* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TCompanyList;
class TCompanyList : public TBusinessClassesRootList
{
protected:
  TCompany* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TCompany *NewObject);
public:
  int __fastcall Includes(TCompany *anObject);
  int __fastcall IndexOf(TCompany *anObject);
  void __fastcall Add(TCompany *NewObject);
  TCompany* __fastcall AddNew();
  void __fastcall Insert(int index, TCompany *NewObject);
  __property TCompany* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TEmployeeList;
class TEmployeeList : public TBusinessClassesRootList
{
protected:
  TEmployee* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TEmployee *NewObject);
public:
  int __fastcall Includes(TEmployee *anObject);
  int __fastcall IndexOf(TEmployee *anObject);
  void __fastcall Add(TEmployee *NewObject);
  TEmployee* __fastcall AddNew();
  void __fastcall Insert(int index, TEmployee *NewObject);
  __property TEmployee* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TJobList;
class TJobList : public TBusinessClassesRootList
{
protected:
  TJob* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TJob *NewObject);
public:
  int __fastcall Includes(TJob *anObject);
  int __fastcall IndexOf(TJob *anObject);
  void __fastcall Add(TJob *NewObject);
  TJob* __fastcall AddNew();
  void __fastcall Insert(int index, TJob *NewObject);
  __property TJob* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};


char* GeneratedCodeCRC();

#endif
 