/*****************************************/
/*      This file is autogenerated       */
/*   Any manual changes will be LOST!    */
/*****************************************/
/* Generated 2002-01-03 15:20:25         */
/*****************************************/
/* This file should be stored in the     */
/* same directory as the form/datamodule */
/* with the corresponding model          */
/*****************************************/
/* Copyright notice:                     */
/*                                       */
/*****************************************/

#if !defined (ConstraintExampleClasses_HPP)
#define ConstraintExampleClasses_HPP

// interface uses
#include "BoldValueSpaceInterfaces.hpp"

// interface dependancies

// attribute dependancies
#include "BoldAttributes.hpp"

#include <Classes.hpp>
#include <Controls.hpp>
#include <SysUtils.hpp>
#include "BoldDefs.hpp"
#include "BoldSubscription.hpp"
#include "BoldDeriver.hpp"
#include "BoldElements.hpp"
#include "BoldDomainElement.hpp"
#include "BoldSystemRT.hpp"
#include "BoldSystem.hpp"

void unregisterCode();

// forward declarations of all classes }

class TBusinessClassesRoot;
class TBusinessClassesRootList;
class TCustomer;
class TCustomerList;
class TOrder;
class TOrderList;
class TOrderItem;
class TOrderItemList;
class TPart;
class TPartList;

class DELPHICLASS TBusinessClassesRoot;
class TBusinessClassesRoot : public Boldsystem::TBoldObject
{
typedef Boldsystem::TBoldObject inherited;
private:
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TBusinessClassesRoot(Boldsystem::TBoldSystem* aBoldSystem) : Boldsystem::TBoldObject(aBoldSystem, true) { }
  #pragma option pop

  Boolean __fastcall MayUpdate(void);
  Boolean __fastcall ReceiveQueryFromOwned(TObject *Originator, TBoldEvent OriginalEvent, const System::TVarRec * Args, const int Args_Size, Boldsubscription::TBoldSubscriber* Subscriber);
};

class DELPHICLASS TCustomer;
class TCustomer : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_name();
  String __fastcall _Getname();
  void __fastcall _Setname(String NewValue);
  TBACurrency* __fastcall _Get_M_creditLimit();
  Currency __fastcall _GetcreditLimit();
  void __fastcall _SetcreditLimit(Currency NewValue);
  TBAString* __fastcall _Get_M_shippingaddress();
  String __fastcall _Getshippingaddress();
  void __fastcall _Setshippingaddress(String NewValue);
  TBAString* __fastcall _Get_M_creditCardNo();
  String __fastcall _GetcreditCardNo();
  void __fastcall _SetcreditCardNo(String NewValue);
  TOrderList* __fastcall _Getorders();
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TCustomer(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  __property TBAString* M_name = {read=_Get_M_name};
  __property TBACurrency* M_creditLimit = {read=_Get_M_creditLimit};
  __property TBAString* M_shippingaddress = {read=_Get_M_shippingaddress};
  __property TBAString* M_creditCardNo = {read=_Get_M_creditCardNo};
  __property TOrderList* M_orders = {read=_Getorders};
  __property String name = {read=_Getname, write=_Setname};
  __property Currency creditLimit = {read=_GetcreditLimit, write=_SetcreditLimit};
  __property String shippingaddress = {read=_Getshippingaddress, write=_Setshippingaddress};
  __property String creditCardNo = {read=_GetcreditCardNo, write=_SetcreditCardNo};
  __property TOrderList* orders = {read=_Getorders};
};

class DELPHICLASS TOrder;
class TOrder : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBADate* __fastcall _Get_M_orderDate();
  TDate __fastcall _GetorderDate();
  void __fastcall _SetorderDate(TDate NewValue);
  TBADate* __fastcall _Get_M_shippingDate();
  TDate __fastcall _GetshippingDate();
  void __fastcall _SetshippingDate(TDate NewValue);
  TBAFloat* __fastcall _Get_M_orderSum();
  double __fastcall _GetorderSum();
  TCustomer* __fastcall _Getcustomer();
  TBoldObjectReference* __fastcall _Get_M_customer();
  void __fastcall _Setcustomer(TCustomer *value);
  TOrderItemList* __fastcall _Getitems();
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TOrder(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  void __fastcall CompleteCreate(void);
  __property TBADate* M_orderDate = {read=_Get_M_orderDate};
  __property TBADate* M_shippingDate = {read=_Get_M_shippingDate};
  __property TBAFloat* M_orderSum = {read=_Get_M_orderSum};
  __property TBoldObjectReference* M_customer = {read=_Get_M_customer};
  __property TOrderItemList* M_items = {read=_Getitems};
  __property TDate orderDate = {read=_GetorderDate, write=_SetorderDate};
  __property TDate shippingDate = {read=_GetshippingDate, write=_SetshippingDate};
  __property double orderSum = {read=_GetorderSum};
  __property TCustomer* customer = {read=_Getcustomer, write=_Setcustomer};
  __property TOrderItemList* items = {read=_Getitems};
};

class DELPHICLASS TOrderItem;
class TOrderItem : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAInteger* __fastcall _Get_M_qty();
  Integer __fastcall _Getqty();
  void __fastcall _Setqty(Integer NewValue);
  TBAFloat* __fastcall _Get_M_itemSum();
  double __fastcall _GetitemSum();
  TOrder* __fastcall _Getorder();
  TBoldObjectReference* __fastcall _Get_M_order();
  void __fastcall _Setorder(TOrder *value);
  TPart* __fastcall _Getpart();
  TBoldObjectReference* __fastcall _Get_M_part();
  void __fastcall _Setpart(TPart *value);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TOrderItem(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  __property TBAInteger* M_qty = {read=_Get_M_qty};
  __property TBAFloat* M_itemSum = {read=_Get_M_itemSum};
  __property TBoldObjectReference* M_order = {read=_Get_M_order};
  __property TBoldObjectReference* M_part = {read=_Get_M_part};
  __property Integer qty = {read=_Getqty, write=_Setqty};
  __property double itemSum = {read=_GetitemSum};
  __property TOrder* order = {read=_Getorder, write=_Setorder};
  __property TPart* part = {read=_Getpart, write=_Setpart};
};

class DELPHICLASS TPart;
class TPart : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_name();
  String __fastcall _Getname();
  void __fastcall _Setname(String NewValue);
  TBACurrency* __fastcall _Get_M_price();
  Currency __fastcall _Getprice();
  void __fastcall _Setprice(Currency NewValue);
  TOrderItemList* __fastcall _Getorderitems();
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TPart(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  __property TBAString* M_name = {read=_Get_M_name};
  __property TBACurrency* M_price = {read=_Get_M_price};
  __property TOrderItemList* M_orderitems = {read=_Getorderitems};
  __property String name = {read=_Getname, write=_Setname};
  __property Currency price = {read=_Getprice, write=_Setprice};
  __property TOrderItemList* orderitems = {read=_Getorderitems};
};

class DELPHICLASS TBusinessClassesRootList;
class TBusinessClassesRootList : public TBoldObjectList
{
protected:
  TBusinessClassesRoot* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TBusinessClassesRoot *NewObject);
public:
  int __fastcall Includes(TBusinessClassesRoot *anObject);
  int __fastcall IndexOf(TBusinessClassesRoot *anObject);
  void __fastcall Add(TBusinessClassesRoot *NewObject);
  TBusinessClassesRoot* __fastcall AddNew();
  void __fastcall Insert(int index, TBusinessClassesRoot *NewObject);
  __property TBusinessClassesRoot* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TCustomerList;
class TCustomerList : public TBusinessClassesRootList
{
protected:
  TCustomer* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TCustomer *NewObject);
public:
  int __fastcall Includes(TCustomer *anObject);
  int __fastcall IndexOf(TCustomer *anObject);
  void __fastcall Add(TCustomer *NewObject);
  TCustomer* __fastcall AddNew();
  void __fastcall Insert(int index, TCustomer *NewObject);
  __property TCustomer* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TOrderList;
class TOrderList : public TBusinessClassesRootList
{
protected:
  TOrder* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TOrder *NewObject);
public:
  int __fastcall Includes(TOrder *anObject);
  int __fastcall IndexOf(TOrder *anObject);
  void __fastcall Add(TOrder *NewObject);
  TOrder* __fastcall AddNew();
  void __fastcall Insert(int index, TOrder *NewObject);
  __property TOrder* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TOrderItemList;
class TOrderItemList : public TBusinessClassesRootList
{
protected:
  TOrderItem* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TOrderItem *NewObject);
public:
  int __fastcall Includes(TOrderItem *anObject);
  int __fastcall IndexOf(TOrderItem *anObject);
  void __fastcall Add(TOrderItem *NewObject);
  TOrderItem* __fastcall AddNew();
  void __fastcall Insert(int index, TOrderItem *NewObject);
  __property TOrderItem* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TPartList;
class TPartList : public TBusinessClassesRootList
{
protected:
  TPart* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TPart *NewObject);
public:
  int __fastcall Includes(TPart *anObject);
  int __fastcall IndexOf(TPart *anObject);
  void __fastcall Add(TPart *NewObject);
  TPart* __fastcall AddNew();
  void __fastcall Insert(int index, TPart *NewObject);
  __property TPart* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};


char* GeneratedCodeCRC();

#endif
 