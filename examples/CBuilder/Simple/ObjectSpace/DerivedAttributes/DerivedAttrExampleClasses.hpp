/*****************************************/
/*      This file is autogenerated       */
/*   Any manual changes will be LOST!    */
/*****************************************/
/* Generated 2002-01-15 16:21:52         */
/*****************************************/
/* This file should be stored in the     */
/* same directory as the form/datamodule */
/* with the corresponding model          */
/*****************************************/
/* Copyright notice:                     */
/*                                       */
/*****************************************/

#if !defined (DerivedAttrExampleClasses_HPP)
#define DerivedAttrExampleClasses_HPP

// interface uses

// interface dependancies

// attribute dependancies
#include "BoldAttributes.hpp"

#include <Classes.hpp>
#include <Controls.hpp>
#include <SysUtils.hpp>
#include "BoldDefs.hpp"
#include "BoldSubscription.hpp"
#include "BoldDeriver.hpp"
#include "BoldElements.hpp"
#include "BoldDomainElement.hpp"
#include "BoldSystemRT.hpp"
#include "BoldSystem.hpp"

void unregisterCode();

// forward declarations of all classes }

class TBusinessClassesRoot;
class TBusinessClassesRootList;
class TGlobalSettings;
class TGlobalSettingsList;
class TProduct;
class TProductList;

class DELPHICLASS TBusinessClassesRoot;
class TBusinessClassesRoot : public Boldsystem::TBoldObject
{
typedef Boldsystem::TBoldObject inherited;
private:
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TBusinessClassesRoot(Boldsystem::TBoldSystem* aBoldSystem) : Boldsystem::TBoldObject(aBoldSystem, true) { }
  #pragma option pop

};

class DELPHICLASS TGlobalSettings;
class TGlobalSettings : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAFloat* __fastcall _Get_M_vat();
  double __fastcall _Getvat();
  void __fastcall _Setvat(double NewValue);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TGlobalSettings(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  __property TBAFloat* M_vat = {read=_Get_M_vat};
  __property double vat = {read=_Getvat, write=_Setvat};
};

class DELPHICLASS TProduct;
class TProduct : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_prodName();
  String __fastcall _GetprodName();
  void __fastcall _SetprodName(String NewValue);
  TBACurrency* __fastcall _Get_M_net_Price();
  Currency __fastcall _Getnet_Price();
  void __fastcall _Setnet_Price(Currency NewValue);
  TBACurrency* __fastcall _Get_M_retail_Price();
  Currency __fastcall _Getretail_Price();
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TProduct(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  __property TBAString* M_prodName = {read=_Get_M_prodName};
  __property TBACurrency* M_net_Price = {read=_Get_M_net_Price};
  __property TBACurrency* M_retail_Price = {read=_Get_M_retail_Price};
  __property String prodName = {read=_GetprodName, write=_SetprodName};
  __property Currency net_Price = {read=_Getnet_Price, write=_Setnet_Price};
  __property Currency retail_Price = {read=_Getretail_Price};
};

class DELPHICLASS TBusinessClassesRootList;
class TBusinessClassesRootList : public TBoldObjectList
{
protected:
  TBusinessClassesRoot* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TBusinessClassesRoot *NewObject);
public:
  int __fastcall Includes(TBusinessClassesRoot *anObject);
  int __fastcall IndexOf(TBusinessClassesRoot *anObject);
  void __fastcall Add(TBusinessClassesRoot *NewObject);
  TBusinessClassesRoot* __fastcall AddNew();
  void __fastcall Insert(int index, TBusinessClassesRoot *NewObject);
  __property TBusinessClassesRoot* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TGlobalSettingsList;
class TGlobalSettingsList : public TBusinessClassesRootList
{
protected:
  TGlobalSettings* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TGlobalSettings *NewObject);
public:
  int __fastcall Includes(TGlobalSettings *anObject);
  int __fastcall IndexOf(TGlobalSettings *anObject);
  void __fastcall Add(TGlobalSettings *NewObject);
  TGlobalSettings* __fastcall AddNew();
  void __fastcall Insert(int index, TGlobalSettings *NewObject);
  __property TGlobalSettings* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TProductList;
class TProductList : public TBusinessClassesRootList
{
protected:
  TProduct* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TProduct *NewObject);
public:
  int __fastcall Includes(TProduct *anObject);
  int __fastcall IndexOf(TProduct *anObject);
  void __fastcall Add(TProduct *NewObject);
  TProduct* __fastcall AddNew();
  void __fastcall Insert(int index, TProduct *NewObject);
  __property TProduct* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};


char* GeneratedCodeCRC();

#endif
 