/*****************************************/
/*      This file is autogenerated       */
/*   Any manual changes will be LOST!    */
/*****************************************/
/* Generated 2002-01-04 11:59:19         */
/*****************************************/
/* This file should be stored in the     */
/* same directory as the form/datamodule */
/* with the corresponding model          */
/*****************************************/
/* Copyright notice:                     */
/*                                       */
/*****************************************/

#if !defined (QueryDemoClasses_HPP)
#define QueryDemoClasses_HPP

// interface uses

// interface dependancies

// attribute dependancies
#include "BoldAttributes.hpp"

#include <Classes.hpp>
#include <Controls.hpp>
#include <SysUtils.hpp>
#include "BoldDefs.hpp"
#include "BoldSubscription.hpp"
#include "BoldDeriver.hpp"
#include "BoldElements.hpp"
#include "BoldDomainElement.hpp"
#include "BoldSystemRT.hpp"
#include "BoldSystem.hpp"

void unregisterCode();

// forward declarations of all classes }

class TBusinessClassesRoot;
class TBusinessClassesRootList;
class TThing;
class TThingList;

class DELPHICLASS TBusinessClassesRoot;
class TBusinessClassesRoot : public Boldsystem::TBoldObject
{
typedef Boldsystem::TBoldObject inherited;
private:
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TBusinessClassesRoot(Boldsystem::TBoldSystem* aBoldSystem) : Boldsystem::TBoldObject(aBoldSystem, true) { }
  #pragma option pop

};

class DELPHICLASS TThing;
class TThing : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_Name();
  String __fastcall _GetName();
  void __fastcall _SetName(String NewValue);
  TThing* __fastcall _Getpartof();
  TBoldObjectReference* __fastcall _Get_M_partof();
  void __fastcall _Setpartof(TThing *value);
  TThingList* __fastcall _Getparts();

  Boolean __fastcall ValidateMaxParts(TThing* aThing);
  Boolean __fastcall ValidatePartOfSelf(TThing* Thing1, TThing* Thing2);
  Boolean __fastcall GrantQueryParts(TThing* aThing, TBoldEvent OriginalEvent, const System::TVarRec * Args);
  Boolean __fastcall GrantQueryPartOf(TThing* aThing, const System::TVarRec * Args);

protected:
public:
  #pragma option push -w-inl
  inline __fastcall TThing(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  Boolean __fastcall IsTransitivePartOf(TThing* aThing);
  Boolean __fastcall ReceiveQueryFromOwned(TObject *Originator, TBoldEvent OriginalEvent, const System::TVarRec * Args, const int Args_Size, Boldsubscription::TBoldSubscriber* Subscriber);
  __property TBAString* M_Name = {read=_Get_M_Name};
  __property TBoldObjectReference* M_partof = {read=_Get_M_partof};
  __property TThingList* M_parts = {read=_Getparts};
  __property String Name = {read=_GetName, write=_SetName};
  __property TThing* partof = {read=_Getpartof, write=_Setpartof};
  __property TThingList* parts = {read=_Getparts};
};

class DELPHICLASS TBusinessClassesRootList;
class TBusinessClassesRootList : public TBoldObjectList
{
protected:
  TBusinessClassesRoot* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TBusinessClassesRoot *NewObject);
public:
  int __fastcall Includes(TBusinessClassesRoot *anObject);
  int __fastcall IndexOf(TBusinessClassesRoot *anObject);
  void __fastcall Add(TBusinessClassesRoot *NewObject);
  TBusinessClassesRoot* __fastcall AddNew();
  void __fastcall Insert(int index, TBusinessClassesRoot *NewObject);
  __property TBusinessClassesRoot* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TThingList;
class TThingList : public TBusinessClassesRootList
{
protected:
  TThing* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TThing *NewObject);
public:
  int __fastcall Includes(TThing *anObject);
  int __fastcall IndexOf(TThing *anObject);
  void __fastcall Add(TThing *NewObject);
  TThing* __fastcall AddNew();
  void __fastcall Insert(int index, TThing *NewObject);
  __property TThing* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};


char* GeneratedCodeCRC();

#endif

