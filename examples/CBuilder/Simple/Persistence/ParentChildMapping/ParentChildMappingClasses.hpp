/*****************************************/
/*      This file is autogenerated       */
/*   Any manual changes will be LOST!    */
/*****************************************/
/* Generated 2002-01-08 10:36:22         */
/*****************************************/
/* This file should be stored in the     */
/* same directory as the form/datamodule */
/* with the corresponding model          */
/*****************************************/
/* Copyright notice:                     */
/*                                       */
/*****************************************/

#if !defined (ParentChildMappingClasses_HPP)
#define ParentChildMappingClasses_HPP

// interface uses

// interface dependancies

// attribute dependancies
#include "BoldAttributes.hpp"

#include <Classes.hpp>
#include <Controls.hpp>
#include <SysUtils.hpp>
#include "BoldDefs.hpp"
#include "BoldSubscription.hpp"
#include "BoldDeriver.hpp"
#include "BoldElements.hpp"
#include "BoldDomainElement.hpp"
#include "BoldSystemRT.hpp"
#include "BoldSystem.hpp"

void unregisterCode();

// forward declarations of all classes }

class TBusinessClassesRoot;
class TBusinessClassesRootList;
class TAircraft;
class TAircraftList;
class TVehicle;
class TVehicleList;
class TJet;
class TJetList;
class TPropeller;
class TPropellerList;
class TBus;
class TBusList;
class TTruck;
class TTruckList;

class DELPHICLASS TBusinessClassesRoot;
class TBusinessClassesRoot : public Boldsystem::TBoldObject
{
typedef Boldsystem::TBoldObject inherited;
private:
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TBusinessClassesRoot(Boldsystem::TBoldSystem* aBoldSystem) : Boldsystem::TBoldObject(aBoldSystem, true) { }
  #pragma option pop

};

class DELPHICLASS TAircraft;
class TAircraft : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_Name();
  String __fastcall _GetName();
  void __fastcall _SetName(String NewValue);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TAircraft(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  __property TBAString* M_Name = {read=_Get_M_Name};
  __property String Name = {read=_GetName, write=_SetName};
};

class DELPHICLASS TVehicle;
class TVehicle : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_Model();
  String __fastcall _GetModel();
  void __fastcall _SetModel(String NewValue);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TVehicle(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  __property TBAString* M_Model = {read=_Get_M_Model};
  __property String Model = {read=_GetModel, write=_SetModel};
};

class DELPHICLASS TJet;
class TJet : public TAircraft
{
typedef TAircraft inherited;
private:
  TBABoolean* __fastcall _Get_M_ThrustVector();
  Boolean __fastcall _GetThrustVector();
  void __fastcall _SetThrustVector(Boolean NewValue);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TJet(Boldsystem::TBoldSystem* aBoldSystem) : TAircraft(aBoldSystem) { }
  #pragma option pop

  void __fastcall CompleteCreate(void);
  __property TBABoolean* M_ThrustVector = {read=_Get_M_ThrustVector};
  __property Boolean ThrustVector = {read=_GetThrustVector, write=_SetThrustVector};
};

class DELPHICLASS TPropeller;
class TPropeller : public TAircraft
{
typedef TAircraft inherited;
private:
  TBAInteger* __fastcall _Get_M_NoOfBlades();
  Integer __fastcall _GetNoOfBlades();
  void __fastcall _SetNoOfBlades(Integer NewValue);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TPropeller(Boldsystem::TBoldSystem* aBoldSystem) : TAircraft(aBoldSystem) { }
  #pragma option pop

  void __fastcall CompleteCreate(void);
  __property TBAInteger* M_NoOfBlades = {read=_Get_M_NoOfBlades};
  __property Integer NoOfBlades = {read=_GetNoOfBlades, write=_SetNoOfBlades};
};

class DELPHICLASS TBus;
class TBus : public TVehicle
{
typedef TVehicle inherited;
private:
  TBAString* __fastcall _Get_M_NoOfPassengers();
  String __fastcall _GetNoOfPassengers();
  void __fastcall _SetNoOfPassengers(String NewValue);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TBus(Boldsystem::TBoldSystem* aBoldSystem) : TVehicle(aBoldSystem) { }
  #pragma option pop

  __property TBAString* M_NoOfPassengers = {read=_Get_M_NoOfPassengers};
  __property String NoOfPassengers = {read=_GetNoOfPassengers, write=_SetNoOfPassengers};
};

class DELPHICLASS TTruck;
class TTruck : public TVehicle
{
typedef TVehicle inherited;
private:
  TBAString* __fastcall _Get_M_MaxLoad();
  String __fastcall _GetMaxLoad();
  void __fastcall _SetMaxLoad(String NewValue);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TTruck(Boldsystem::TBoldSystem* aBoldSystem) : TVehicle(aBoldSystem) { }
  #pragma option pop

  __property TBAString* M_MaxLoad = {read=_Get_M_MaxLoad};
  __property String MaxLoad = {read=_GetMaxLoad, write=_SetMaxLoad};
};

class DELPHICLASS TBusinessClassesRootList;
class TBusinessClassesRootList : public TBoldObjectList
{
protected:
  TBusinessClassesRoot* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TBusinessClassesRoot *NewObject);
public:
  int __fastcall Includes(TBusinessClassesRoot *anObject);
  int __fastcall IndexOf(TBusinessClassesRoot *anObject);
  void __fastcall Add(TBusinessClassesRoot *NewObject);
  TBusinessClassesRoot* __fastcall AddNew();
  void __fastcall Insert(int index, TBusinessClassesRoot *NewObject);
  __property TBusinessClassesRoot* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TAircraftList;
class TAircraftList : public TBusinessClassesRootList
{
protected:
  TAircraft* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TAircraft *NewObject);
public:
  int __fastcall Includes(TAircraft *anObject);
  int __fastcall IndexOf(TAircraft *anObject);
  void __fastcall Add(TAircraft *NewObject);
  TAircraft* __fastcall AddNew();
  void __fastcall Insert(int index, TAircraft *NewObject);
  __property TAircraft* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TVehicleList;
class TVehicleList : public TBusinessClassesRootList
{
protected:
  TVehicle* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TVehicle *NewObject);
public:
  int __fastcall Includes(TVehicle *anObject);
  int __fastcall IndexOf(TVehicle *anObject);
  void __fastcall Add(TVehicle *NewObject);
  TVehicle* __fastcall AddNew();
  void __fastcall Insert(int index, TVehicle *NewObject);
  __property TVehicle* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TJetList;
class TJetList : public TAircraftList
{
protected:
  TJet* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TJet *NewObject);
public:
  int __fastcall Includes(TJet *anObject);
  int __fastcall IndexOf(TJet *anObject);
  void __fastcall Add(TJet *NewObject);
  TJet* __fastcall AddNew();
  void __fastcall Insert(int index, TJet *NewObject);
  __property TJet* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TPropellerList;
class TPropellerList : public TAircraftList
{
protected:
  TPropeller* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TPropeller *NewObject);
public:
  int __fastcall Includes(TPropeller *anObject);
  int __fastcall IndexOf(TPropeller *anObject);
  void __fastcall Add(TPropeller *NewObject);
  TPropeller* __fastcall AddNew();
  void __fastcall Insert(int index, TPropeller *NewObject);
  __property TPropeller* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TBusList;
class TBusList : public TVehicleList
{
protected:
  TBus* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TBus *NewObject);
public:
  int __fastcall Includes(TBus *anObject);
  int __fastcall IndexOf(TBus *anObject);
  void __fastcall Add(TBus *NewObject);
  TBus* __fastcall AddNew();
  void __fastcall Insert(int index, TBus *NewObject);
  __property TBus* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TTruckList;
class TTruckList : public TVehicleList
{
protected:
  TTruck* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TTruck *NewObject);
public:
  int __fastcall Includes(TTruck *anObject);
  int __fastcall IndexOf(TTruck *anObject);
  void __fastcall Add(TTruck *NewObject);
  TTruck* __fastcall AddNew();
  void __fastcall Insert(int index, TTruck *NewObject);
  __property TTruck* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};


char* GeneratedCodeCRC();

#endif

