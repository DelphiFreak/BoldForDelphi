/*****************************************/
/*      This file is autogenerated       */
/*   Any manual changes will be LOST!    */
/*****************************************/
/* Generated 2002-01-10 16:40:02         */
/*****************************************/
/* This file should be stored in the     */
/* same directory as the form/datamodule */
/* with the corresponding model          */
/*****************************************/
/* Copyright notice:                     */
/*                                       */
/*****************************************/

#if !defined (ModelEvClasses_HPP)
#define ModelEvClasses_HPP

// interface uses

// interface dependancies

// attribute dependancies
#include "BoldAttributes.hpp"

#include <Classes.hpp>
#include <Controls.hpp>
#include <SysUtils.hpp>
#include "BoldDefs.hpp"
#include "BoldSubscription.hpp"
#include "BoldDeriver.hpp"
#include "BoldElements.hpp"
#include "BoldDomainElement.hpp"
#include "BoldSystemRT.hpp"
#include "BoldSystem.hpp"

void unregisterCode();

// forward declarations of all classes }

class TBusinessClassesRoot;
class TBusinessClassesRootList;
class TDiscount;
class TDiscountList;
class TOrder;
class TOrderList;
class TOrderItem;
class TOrderItemList;
class TPerson;
class TPersonList;
class TProduct;
class TProductList;

class DELPHICLASS TBusinessClassesRoot;
class TBusinessClassesRoot : public Boldsystem::TBoldObject
{
typedef Boldsystem::TBoldObject inherited;
private:
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TBusinessClassesRoot(Boldsystem::TBoldSystem* aBoldSystem) : Boldsystem::TBoldObject(aBoldSystem, true) { }
  #pragma option pop

};

class DELPHICLASS TDiscount;
class TDiscount : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAInteger* __fastcall _Get_M_Percent();
  Integer __fastcall _GetPercent();
  void __fastcall _SetPercent(Integer NewValue);
  TOrderList* __fastcall _GetOrder();
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TDiscount(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  void __fastcall ReceiveEventFromOwned(TObject *Originator, TBoldEvent OriginalEvent);
  __property TBAInteger* M_Percent = {read=_Get_M_Percent};
  __property TOrderList* M_Order = {read=_GetOrder};
  __property Integer Percent = {read=_GetPercent, write=_SetPercent};
  __property TOrderList* Order = {read=_GetOrder};
};

class DELPHICLASS TOrder;
class TOrder : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBADate* __fastcall _Get_M_OrderDate();
  TDate __fastcall _GetOrderDate();
  void __fastcall _SetOrderDate(TDate NewValue);
  TBACurrency* __fastcall _Get_M_TotalCost();
  Currency __fastcall _GetTotalCost();
  TBAInteger* __fastcall _Get_M_Discount();
  Integer __fastcall _GetDiscount();
  void __fastcall _SetDiscount(Integer NewValue);
  TPerson* __fastcall _GetPerson();
  TBoldObjectReference* __fastcall _Get_M_Person();
  void __fastcall _SetPerson(TPerson *value);
  TOrderItemList* __fastcall _GetOrderItem();
  TDiscount* __fastcall _GettheDiscount();
  TBoldObjectReference* __fastcall _Get_M_theDiscount();
  void __fastcall _SettheDiscount(TDiscount *value);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TOrder(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  void __fastcall Upgrade(void);
  __property TBADate* M_OrderDate = {read=_Get_M_OrderDate};
  __property TBACurrency* M_TotalCost = {read=_Get_M_TotalCost};
  __property TBAInteger* M_Discount = {read=_Get_M_Discount};
  __property TBoldObjectReference* M_Person = {read=_Get_M_Person};
  __property TOrderItemList* M_OrderItem = {read=_GetOrderItem};
  __property TBoldObjectReference* M_theDiscount = {read=_Get_M_theDiscount};
  __property TDate OrderDate = {read=_GetOrderDate, write=_SetOrderDate};
  __property Currency TotalCost = {read=_GetTotalCost};
  __property Integer Discount = {read=_GetDiscount, write=_SetDiscount};
  __property TPerson* Person = {read=_GetPerson, write=_SetPerson};
  __property TOrderItemList* OrderItem = {read=_GetOrderItem};
  __property TDiscount* theDiscount = {read=_GettheDiscount, write=_SettheDiscount};
};

class DELPHICLASS TOrderItem;
class TOrderItem : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAInteger* __fastcall _Get_M_Qty();
  Integer __fastcall _GetQty();
  void __fastcall _SetQty(Integer NewValue);
  TOrder* __fastcall _GetOrder();
  TBoldObjectReference* __fastcall _Get_M_Order();
  void __fastcall _SetOrder(TOrder *value);
  TProduct* __fastcall _GetProduct();
  TBoldObjectReference* __fastcall _Get_M_Product();
  void __fastcall _SetProduct(TProduct *value);
protected:
public:
  #pragma option push -w-inl
  inline __fastcall TOrderItem(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  __property TBAInteger* M_Qty = {read=_Get_M_Qty};
  __property TBoldObjectReference* M_Order = {read=_Get_M_Order};
  __property TBoldObjectReference* M_Product = {read=_Get_M_Product};
  __property Integer Qty = {read=_GetQty, write=_SetQty};
  __property TOrder* Order = {read=_GetOrder, write=_SetOrder};
  __property TProduct* Product = {read=_GetProduct, write=_SetProduct};
};

class DELPHICLASS TPerson;
class TPerson : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBAString* __fastcall _Get_M_FullName();
  String __fastcall _GetFullName();
  void __fastcall _SetFullName(String NewValue);
  TBAString* __fastcall _Get_M_Firstname();
  String __fastcall _GetFirstname();
  void __fastcall _SetFirstname(String NewValue);
  TBAString* __fastcall _Get_M_LastName();
  String __fastcall _GetLastName();
  void __fastcall _SetLastName(String NewValue);
  TOrderList* __fastcall _GetOrder();
  __property TBAString* M_FullName = {read=_Get_M_FullName};
  __property String FullName = {read=_GetFullName, write=_SetFullName};
protected:
  void __fastcall PrepareUpdate(void);
public:
  #pragma option push -w-inl
  inline __fastcall TPerson(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  void __fastcall Upgrade(void);
  __property TBAString* M_Firstname = {read=_Get_M_Firstname};
  __property TBAString* M_LastName = {read=_Get_M_LastName};
  __property TOrderList* M_Order = {read=_GetOrder};
  __property String Firstname = {read=_GetFirstname, write=_SetFirstname};
  __property String LastName = {read=_GetLastName, write=_SetLastName};
  __property TOrderList* Order = {read=_GetOrder};
};

class DELPHICLASS TProduct;
class TProduct : public TBusinessClassesRoot
{
typedef TBusinessClassesRoot inherited;
private:
  TBACurrency* __fastcall _Get_M_Cost();
  Currency __fastcall _GetCost();
  void __fastcall _SetCost(Currency NewValue);
  TBACurrency* __fastcall _Get_M_CostEuro();
  Currency __fastcall _GetCostEuro();
  void __fastcall _SetCostEuro(Currency NewValue);
  TBAString* __fastcall _Get_M_Description();
  String __fastcall _GetDescription();
  void __fastcall _SetDescription(String NewValue);
  TOrderItemList* __fastcall _GetOrderItem();
  __property TBACurrency* M_Cost = {read=_Get_M_Cost};
  __property Currency Cost = {read=_GetCost, write=_SetCost};
protected:
  void __fastcall PrepareUpdate(void);
public:
  #pragma option push -w-inl
  inline __fastcall TProduct(Boldsystem::TBoldSystem* aBoldSystem) : TBusinessClassesRoot(aBoldSystem) { }
  #pragma option pop

  void __fastcall Upgrade(void);
  __property TBACurrency* M_CostEuro = {read=_Get_M_CostEuro};
  __property TBAString* M_Description = {read=_Get_M_Description};
  __property TOrderItemList* M_OrderItem = {read=_GetOrderItem};
  __property Currency CostEuro = {read=_GetCostEuro, write=_SetCostEuro};
  __property String Description = {read=_GetDescription, write=_SetDescription};
  __property TOrderItemList* OrderItem = {read=_GetOrderItem};
};

class DELPHICLASS TBusinessClassesRootList;
class TBusinessClassesRootList : public TBoldObjectList
{
protected:
  TBusinessClassesRoot* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TBusinessClassesRoot *NewObject);
public:
  int __fastcall Includes(TBusinessClassesRoot *anObject);
  int __fastcall IndexOf(TBusinessClassesRoot *anObject);
  void __fastcall Add(TBusinessClassesRoot *NewObject);
  TBusinessClassesRoot* __fastcall AddNew();
  void __fastcall Insert(int index, TBusinessClassesRoot *NewObject);
  __property TBusinessClassesRoot* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TDiscountList;
class TDiscountList : public TBusinessClassesRootList
{
protected:
  TDiscount* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TDiscount *NewObject);
public:
  int __fastcall Includes(TDiscount *anObject);
  int __fastcall IndexOf(TDiscount *anObject);
  void __fastcall Add(TDiscount *NewObject);
  TDiscount* __fastcall AddNew();
  void __fastcall Insert(int index, TDiscount *NewObject);
  __property TDiscount* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TOrderList;
class TOrderList : public TBusinessClassesRootList
{
protected:
  TOrder* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TOrder *NewObject);
public:
  int __fastcall Includes(TOrder *anObject);
  int __fastcall IndexOf(TOrder *anObject);
  void __fastcall Add(TOrder *NewObject);
  TOrder* __fastcall AddNew();
  void __fastcall Insert(int index, TOrder *NewObject);
  __property TOrder* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TOrderItemList;
class TOrderItemList : public TBusinessClassesRootList
{
protected:
  TOrderItem* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TOrderItem *NewObject);
public:
  int __fastcall Includes(TOrderItem *anObject);
  int __fastcall IndexOf(TOrderItem *anObject);
  void __fastcall Add(TOrderItem *NewObject);
  TOrderItem* __fastcall AddNew();
  void __fastcall Insert(int index, TOrderItem *NewObject);
  __property TOrderItem* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TPersonList;
class TPersonList : public TBusinessClassesRootList
{
protected:
  TPerson* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TPerson *NewObject);
public:
  int __fastcall Includes(TPerson *anObject);
  int __fastcall IndexOf(TPerson *anObject);
  void __fastcall Add(TPerson *NewObject);
  TPerson* __fastcall AddNew();
  void __fastcall Insert(int index, TPerson *NewObject);
  __property TPerson* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};

class DELPHICLASS TProductList;
class TProductList : public TBusinessClassesRootList
{
protected:
  TProduct* __fastcall GetBoldObject(int index);
  void __fastcall SetBoldObject(int index, TProduct *NewObject);
public:
  int __fastcall Includes(TProduct *anObject);
  int __fastcall IndexOf(TProduct *anObject);
  void __fastcall Add(TProduct *NewObject);
  TProduct* __fastcall AddNew();
  void __fastcall Insert(int index, TProduct *NewObject);
  __property TProduct* BoldObjects[int index] = {read=GetBoldObject, write=SetBoldObject};
};


char* GeneratedCodeCRC();

#endif

